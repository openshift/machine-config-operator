name: kubelet.service
enabled: true
contents: |
  [Unit]
  Description=Kubernetes Kubelet
  Wants=rpc-statd.service network-online.target
  Requires=crio.service kubelet-auto-node-size.service
  After=network-online.target crio.service kubelet-auto-node-size.service
  After=ostree-finalize-staged.service

  [Service]
  Type=notify
  ExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests
  ExecStartPre=/bin/rm -f /var/lib/kubelet/cpu_manager_state
{{- if eq .IPFamilies "IPv6"}}
  Environment="KUBELET_NODE_IP=::"
{{- end}}
  EnvironmentFile=/etc/os-release
  EnvironmentFile=-/etc/kubernetes/kubelet-workaround
  EnvironmentFile=-/etc/kubernetes/kubelet-env
  EnvironmentFile=/etc/node-sizing.env

  ExecStart=/usr/bin/hyperkube \
      kubelet \
        --config=/etc/kubernetes/kubelet.conf \
        --bootstrap-kubeconfig=/etc/kubernetes/kubeconfig \
        --kubeconfig=/var/lib/kubelet/kubeconfig \
        --container-runtime=remote \
        --container-runtime-endpoint=/var/run/crio/crio.sock \
        --housekeeping-interval=60s \
        --max-housekeeping-interval=60s \
        --runtime-cgroups=/system.slice/crio.service \
        --node-labels=node-role.kubernetes.io/master,node.openshift.io/os_id=${ID} \
{{- if eq .IPFamilies "DualStack"}}
        --node-ip=${KUBELET_NODE_IPS} \
{{- else}}
        --node-ip=${KUBELET_NODE_IP} \
{{- end}}
        --minimum-container-ttl-duration=6m0s \
        --cloud-provider={{cloudProvider .}} \
        --volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec \
        {{cloudConfigFlag . }} \
        --register-with-taints=node-role.kubernetes.io/master=:NoSchedule \
        --pod-infra-container-image={{.Images.infraImageKey}} \
        --system-reserved=cpu=${SYSTEM_RESERVED_CPU},memory=${SYSTEM_RESERVED_MEMORY} \
        --v=${KUBELET_LOG_LEVEL}

  Restart=always
  RestartSec=10

  [Install]
  WantedBy=multi-user.target
