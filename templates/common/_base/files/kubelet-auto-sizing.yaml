mode: 0755
path: "/usr/local/sbin/dynamic-system-reserved-calc.sh"
contents:
  inline: |
    #!/bin/bash
    set -e
    NODE_SIZES_ENV=${NODE_SIZES_ENV:-/etc/node-sizing.env}
    NODE_AUTO_SIZING_VERSION=${NODE_AUTO_SIZING_VERSION:-1}
    NODE_AUTO_SIZING_VERSION_FILE=${NODE_AUTO_SIZING_VERSION_FILE:-/etc/node-sizing-version.json}
    function dynamic_memory_sizing {
        total_memory=$(free -g|awk '/^Mem:/{print $2}')
        # total_memory=8 test the recommended values by modifying this value
        recommended_systemreserved_memory=0
        if (($total_memory <= 4)); then # 25% of the first 4GB of memory
            recommended_systemreserved_memory=$(echo $total_memory 0.25 | awk '{print $1 * $2}')
            total_memory=0
        else
            recommended_systemreserved_memory=1
            total_memory=$((total_memory-4))
        fi
        if (($total_memory <= 4)); then # 20% of the next 4GB of memory (up to 8GB)
            recommended_systemreserved_memory=$(echo $recommended_systemreserved_memory $(echo $total_memory 0.20 | awk '{print $1 * $2}') | awk '{print $1 + $2}')
            total_memory=0
        else
            recommended_systemreserved_memory=$(echo $recommended_systemreserved_memory 0.80 | awk '{print $1 + $2}')
            total_memory=$((total_memory-4))
        fi
        if (($total_memory <= 8)); then # 10% of the next 8GB of memory (up to 16GB)
            recommended_systemreserved_memory=$(echo $recommended_systemreserved_memory $(echo $total_memory 0.10 | awk '{print $1 * $2}') | awk '{print $1 + $2}')
            total_memory=0
        else
            recommended_systemreserved_memory=$(echo $recommended_systemreserved_memory 0.80 | awk '{print $1 + $2}')
            total_memory=$((total_memory-8))
        fi
        if (($total_memory <= 112)); then # 6% of the next 112GB of memory (up to 128GB)
            recommended_systemreserved_memory=$(echo $recommended_systemreserved_memory $(echo $total_memory 0.06 | awk '{print $1 * $2}') | awk '{print $1 + $2}')
            total_memory=0
        else
            recommended_systemreserved_memory=$(echo $recommended_systemreserved_memory 6.72 | awk '{print $1 + $2}')
            total_memory=$((total_memory-112))
        fi
        if (($total_memory >= 0)); then # 2% of any memory above 128GB
            recommended_systemreserved_memory=$(echo $recommended_systemreserved_memory $(echo $total_memory 0.02 | awk '{print $1 * $2}') | awk '{print $1 + $2}')
        fi
        recommended_systemreserved_memory=$(echo $recommended_systemreserved_memory | awk '{printf("%d\n",$1 + 0.5)}') # Round off so we avoid float conversions
        echo "SYSTEM_RESERVED_MEMORY=${recommended_systemreserved_memory}Gi">> ${NODE_SIZES_ENV}
    }
    function dynamic_cpu_sizing {
        total_cpu=$(getconf _NPROCESSORS_ONLN)
        recommended_systemreserved_cpu=0
        if (($total_cpu <= 1)); then # 6% of the first core
            recommended_systemreserved_cpu=$(echo $total_cpu 0.06 | awk '{print $1 * $2}')
            total_cpu=0
        else
            recommended_systemreserved_cpu=0.06
            total_cpu=$((total_cpu-1))
        fi
        if (($total_cpu <= 1)); then # 1% of the next core (up to 2 cores)
            recommended_systemreserved_cpu=$(echo $recommended_systemreserved_cpu $(echo $total_cpu 0.01 | awk '{print $1 * $2}') | awk '{print $1 + $2}')
            total_cpu=0
        else
            recommended_systemreserved_cpu=$(echo $recommended_systemreserved_cpu 0.01 | awk '{print $1 + $2}')
            total_cpu=$((total_cpu-1))
        fi
        if (($total_cpu <= 2)); then # 0.5% of the next 2 cores (up to 4 cores)
            recommended_systemreserved_cpu=$(echo $recommended_systemreserved_cpu $(echo $total_cpu 0.005 | awk '{print $1 * $2}') | awk '{print $1 + $2}')
            total_cpu=0
        else
            recommended_systemreserved_cpu=$(echo $recommended_systemreserved_cpu 0.01 | awk '{print $1 + $2}')
            total_cpu=$((total_cpu-2))
        fi
        if (($total_cpu >= 0)); then # 0.25% of any cores above 4 cores
            recommended_systemreserved_cpu=$(echo $recommended_systemreserved_cpu $(echo $total_cpu 0.0025 | awk '{print $1 * $2}') | awk '{print $1 + $2}')
        fi
        echo "SYSTEM_RESERVED_CPU=${recommended_systemreserved_cpu}">> ${NODE_SIZES_ENV}
    }
    function dynamic_ephemeral_sizing {
        echo "Not implemented yet"
    }
    function dynamic_pid_sizing {
        echo "Not implemented yet"
    }
    function set_memory {
        SYSTEM_RESERVED_MEMORY=$1
        if [ -z "${SYSTEM_RESERVED_MEMORY}" ]; then
            SYSTEM_RESERVED_MEMORY="1Gi"
        fi
        echo "SYSTEM_RESERVED_MEMORY=${SYSTEM_RESERVED_MEMORY}" >> ${NODE_SIZES_ENV}
    }
    function set_cpu {
        SYSTEM_RESERVED_CPU=$1
        if [ -z "${SYSTEM_RESERVED_CPU}" ]; then
            SYSTEM_RESERVED_CPU="500m"
        fi
        echo "SYSTEM_RESERVED_CPU=${SYSTEM_RESERVED_CPU}" >> ${NODE_SIZES_ENV}
    }
    function set_es {
        SYSTEM_RESERVED_ES=$1
        if [ -z "${SYSTEM_RESERVED_ES}" ]; then
            SYSTEM_RESERVED_ES="1Gi"
        fi
        echo "SYSTEM_RESERVED_ES=${SYSTEM_RESERVED_ES}" >> ${NODE_SIZES_ENV}
    }
    function dynamic_node_sizing {
        rm -f ${NODE_SIZES_ENV}
        dynamic_memory_sizing
        dynamic_cpu_sizing
        set_es $1
        #dynamic_ephemeral_sizing
        #dynamic_pid_sizing
    }
    function static_node_sizing {
        rm -f ${NODE_SIZES_ENV}
        set_memory $1
        set_cpu $2
        set_es $3
    }
    function create_version_file {
        echo "{\"version\": $1}" > $2
    }

    if [ $1 == "true" ]; then
        dynamic_node_sizing $4
    elif [ $1 == "false" ]; then
        static_node_sizing $2 $3 $4
    else
        echo "Unrecognized command line option. Valid options are \"true\" or \"false\""
    fi
    create_version_file $NODE_AUTO_SIZING_VERSION $NODE_AUTO_SIZING_VERSION_FILE
