mode: 0755
path: "/etc/NetworkManager/dispatcher.d/30-resolv-prepender"
contents:
  inline: |
    {{ if gt (len (onPremPlatformAPIServerInternalIPs .)) 0 -}}
    #!/bin/bash
    set -eo pipefail
    IFACE=$1
    STATUS=$2

    function resolv_prepender {
      mkdir -p /run/resolv-prepender
      echo "DHCP6_FQDN_FQDN=$DHCP6_FQDN_FQDN" > /run/resolv-prepender/env
      echo "IP4_DOMAINS=$IP4_DOMAINS" >> /run/resolv-prepender/env
      echo "IP6_DOMAINS=$IP6_DOMAINS" >> /run/resolv-prepender/env
      systemctl start on-prem-resolv-prepender
      # Wait for the service to complete so we don't mark the network up too soon
      while systemctl is-active on-prem-resolv-prepender
      do
        sleep 1
      done
    }

    export DHCP6_FQDN_FQDN IP4_DOMAINS IP6_DOMAINS
    export -f resolv_prepender

    # For RHEL8 with NetworkManager >= 1.36 and RHEL9 with NetworkManager >=1.42 we can use simplified logic
    # of observing only a single "dns-change" event. Older version of NetworkManager require however that we
    # react on a set of multiple events. Once dns-change event is detected we create a flag file to ignore
    # subsequent up&co. events as undesired.
    #
    # Given an overall Network Manager dispatcher timeout of 90 seconds, we are enforcing a slightly shorter
    # timeout for the observed events.
    case "$STATUS" in
      dns-change)
        >&2 echo "NM resolv-prepender triggered by ${IFACE} ${STATUS}."
        if [ ! -f "/run/networkmanager-dns-event-detected" ]; then
          touch /run/networkmanager-dns-event-detected
        fi
        if ! timeout 60s bash -c resolv_prepender; then
          >&2 echo "NM resolv-prepender: Timeout occurred"
          exit 1
        fi
      ;;
      up|dhcp4-change|dhcp6-change|reapply)
        if [ ! -f "/run/networkmanager-dns-event-detected" ]; then
          >&2 echo "NM resolv-prepender triggered by ${IFACE} ${STATUS}."
          if ! timeout 30s bash -c resolv_prepender; then
            >&2 echo "NM resolv-prepender: Timeout occurred"
            exit 1
          fi
        fi
      ;;
      *)
      ;;
    esac

    {{ end -}}
