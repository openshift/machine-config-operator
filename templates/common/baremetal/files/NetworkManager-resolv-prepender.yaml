mode: 0755
path: "/etc/NetworkManager/dispatcher.d/30-resolv-prepender"
contents:
  inline: |
    #!/bin/bash
    set -eo pipefail
    IFACE=$1
    STATUS=$2

    {{if .Proxy -}}
    {{if .Proxy.HTTPProxy -}}
    export HTTP_PROXY={{.Proxy.HTTPProxy}}
    {{end -}}
    {{if .Proxy.HTTPSProxy -}}
    export HTTPS_PROXY={{.Proxy.HTTPSProxy}}
    {{end -}}
    {{if .Proxy.NoProxy -}}
    export NO_PROXY={{.Proxy.NoProxy}}
    {{end -}}
    {{end -}}

    # If $DHCP6_FQDN_FQDN is not empty and is not localhost.localdomain
    [[ -n "$DHCP6_FQDN_FQDN" && "$DHCP6_FQDN_FQDN" != "localhost.localdomain" && "$DHCP6_FQDN_FQDN" =~ "." ]] && hostnamectl set-hostname --static --transient $DHCP6_FQDN_FQDN
    case "$STATUS" in
        up|dhcp4-change|dhcp6-change)
        >&2 echo "NM resolv-prepender triggered by ${1} ${2}."

        # In DHCP connections, the resolv.conf content may be late, thus we wait for nameservers
        timeout 45s /bin/bash <<EOF
            if [[ "$STATUS" == dhcp* ]]; then
                >&2 echo  "NM resolv-prepender: Checking for nameservers in /var/run/NetworkManager/resolv.conf"
                while ! grep nameserver /var/run/NetworkManager/resolv.conf; do
                    >&2 echo  "NM resolv-prepender: NM resolv.conf still empty of nameserver"
                    sleep 0.5
                done
            fi
    EOF
        # Ensure resolv.conf exists and contains nameservers before we try to run podman
        if [[ ! -e /etc/resolv.conf ]] || ! grep -q nameserver /etc/resolv.conf; then
            cp /var/run/NetworkManager/resolv.conf /etc/resolv.conf
        fi


        NAMESERVER_IP=$(/usr/bin/podman run --rm \
            --authfile /var/lib/kubelet/config.json \
            --net=host \
            {{ .Images.baremetalRuntimeCfgImage }} \
            node-ip \
            show \
            "{{.Infra.Status.PlatformStatus.BareMetal.APIServerInternalIP}}" \
            "{{.Infra.Status.PlatformStatus.BareMetal.IngressIP}}")
        DOMAIN="{{.Infra.Status.EtcdDiscoveryDomain}}"
        if [[ -n "$NAMESERVER_IP" ]]; then
            >&2 echo "NM resolv-prepender: Prepending 'nameserver $NAMESERVER_IP' to /etc/resolv.conf (other nameservers from /var/run/NetworkManager/resolv.conf)"
            sed -e "/^search/d" \
                -e "/Generated by/c# Generated by KNI resolv prepender NM dispatcher script\nsearch $DOMAIN\nnameserver $NAMESERVER_IP" \
                /var/run/NetworkManager/resolv.conf > /etc/resolv.tmp
        fi
        # Only leave the first 3 nameservers in /etc/resolv.conf
        sed -i ':a $!{N; ba}; s/\(^\|\n\)nameserver/\n# nameserver/4g' /etc/resolv.tmp
        mv -f /etc/resolv.tmp /etc/resolv.conf
        ;;
        *)
        ;;
    esac
