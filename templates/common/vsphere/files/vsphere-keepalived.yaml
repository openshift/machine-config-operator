filesystem: "root"
mode: 0644
path: "/etc/kubernetes/manifests/keepalived.yaml"
contents:
  inline: |
    {{ if .Infra.Status.PlatformStatus.VSphere -}}
    {{ if .Infra.Status.PlatformStatus.VSphere.APIServerInternalIP -}}
    kind: Pod
    apiVersion: v1
    metadata:
      name: keepalived
      namespace: openshift-vsphere-infra
      creationTimestamp:
      deletionGracePeriodSeconds: 65
      labels:
        app: vsphere-infra-vrrp
    spec:
      volumes:
      - name: resource-dir
        hostPath:
          path: "/etc/kubernetes/static-pod-resources/keepalived"
      - name: kubeconfig
        hostPath:
          path: "/etc/kubernetes/kubeconfig"
      - name: conf-dir
        hostPath:
          path: "/etc/keepalived"
      - name: run-dir
        empty-dir: {}
      containers:
      - name: keepalived
        securityContext:
          privileged: true
        image: {{.Images.keepalivedImage}}
        env:
          - name: NSS_SDB_USE_CACHE
            value: "no"
        command:
        - /bin/bash
        - -c
        - |
          #/bin/bash
          reload_keepalived()
          {
            if pid=$(pgrep -o keepalived); then
                kill -s SIGHUP "$pid"
            else
                /usr/sbin/keepalived -f /etc/keepalived/keepalived.conf --dont-fork --vrrp --log-detail --log-console &
            fi
          }

          msg_handler()
          {
            while read -r line; do
              echo "The client sent: $line" >&2
              # currently only 'reload' msg is supported
              if [ "$line" = reload ]; then
                  reload_keepalived
              fi
            done
          }

          set -ex
          declare -r keepalived_sock="/var/run/keepalived/keepalived.sock"
          export -f msg_handler
          export -f reload_keepalived
          if [ -s "/etc/keepalived/keepalived.conf" ]; then
              /usr/sbin/keepalived -f /etc/keepalived/keepalived.conf --dont-fork --vrrp --log-detail --log-console &
          fi

          rm -f "$keepalived_sock"
          socat UNIX-LISTEN:${keepalived_sock},fork system:'bash -c msg_handler'
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: conf-dir
          mountPath: "/etc/keepalived"
        - name: run-dir
          mountPath: "/var/run/keepalived"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - |
              [[ -s /etc/keepalived/keepalived.conf ]] || \
              kill -s SIGUSR1 "$(pgrep -o keepalived)" && ! grep -q "State = FAULT" /tmp/keepalived.data
          initialDelaySeconds: 10
        terminationMessagePolicy: FallbackToLogsOnError
        imagePullPolicy: IfNotPresent
      - name: keepalived-monitor
        image: {{ .Images.baremetalRuntimeCfgImage }}
        command:
        - dynkeepalived
        - "/etc/kubernetes/kubeconfig"
        - "/config/keepalived.conf.tmpl"
        - "/etc/keepalived/keepalived.conf"
        - "--api-vip"
        - "{{ .Infra.Status.PlatformStatus.VSphere.APIServerInternalIP }}"
        - "--dns-vip"
        - "{{ .Infra.Status.PlatformStatus.VSphere.NodeDNSIP }}"
        - "--ingress-vip"
        - "{{ .Infra.Status.PlatformStatus.VSphere.IngressIP }}"
        volumeMounts:
        - name: resource-dir
          mountPath: "/config"
        - name: kubeconfig
          mountPath: "/etc/kubernetes/kubeconfig"
        - name: conf-dir
          mountPath: "/etc/keepalived"
        - name: run-dir
          mountPath: "/var/run/keepalived"
        imagePullPolicy: IfNotPresent
      hostNetwork: true
      tolerations:
      - operator: Exists
      priorityClassName: system-node-critical
    status: {}
    {{ end -}}
    {{ end -}}
