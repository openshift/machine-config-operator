// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	machineconfigurationv1alpha1 "github.com/openshift/api/machineconfiguration/v1alpha1"
	types "k8s.io/apimachinery/pkg/types"
	v1 "k8s.io/client-go/applyconfigurations/core/v1"
)

// MachineConfigStateStatusApplyConfiguration represents an declarative configuration of the MachineConfigStateStatus type for use
// with apply.
type MachineConfigStateStatusApplyConfiguration struct {
	v1.ObjectReferenceApplyConfiguration `json:",inline"`
	Conditions                           []ProgressionConditionApplyConfiguration                          `json:"conditions,omitempty"`
	MostRecentError                      *string                                                           `json:"mostRecentError,omitempty"`
	Health                               *machineconfigurationv1alpha1.MachineConfigStateHealthEnumeration `json:"health,omitempty"`
	ObservedGeneration                   *int64                                                            `json:"observedGeneration,omitempty"`
	ConfigVersion                        *MachineConfigVersionApplyConfiguration                           `json:"configVersion,omitempty"`
}

// MachineConfigStateStatusApplyConfiguration constructs an declarative configuration of the MachineConfigStateStatus type for use with
// apply.
func MachineConfigStateStatus() *MachineConfigStateStatusApplyConfiguration {
	return &MachineConfigStateStatusApplyConfiguration{}
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithKind(value string) *MachineConfigStateStatusApplyConfiguration {
	b.Kind = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithNamespace(value string) *MachineConfigStateStatusApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithName(value string) *MachineConfigStateStatusApplyConfiguration {
	b.Name = &value
	return b
}

// WithUID sets the UID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UID field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithUID(value types.UID) *MachineConfigStateStatusApplyConfiguration {
	b.UID = &value
	return b
}

// WithAPIVersion sets the APIVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIVersion field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithAPIVersion(value string) *MachineConfigStateStatusApplyConfiguration {
	b.APIVersion = &value
	return b
}

// WithResourceVersion sets the ResourceVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResourceVersion field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithResourceVersion(value string) *MachineConfigStateStatusApplyConfiguration {
	b.ResourceVersion = &value
	return b
}

// WithFieldPath sets the FieldPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FieldPath field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithFieldPath(value string) *MachineConfigStateStatusApplyConfiguration {
	b.FieldPath = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *MachineConfigStateStatusApplyConfiguration) WithConditions(values ...*ProgressionConditionApplyConfiguration) *MachineConfigStateStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithConditions")
		}
		b.Conditions = append(b.Conditions, *values[i])
	}
	return b
}

// WithMostRecentError sets the MostRecentError field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MostRecentError field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithMostRecentError(value string) *MachineConfigStateStatusApplyConfiguration {
	b.MostRecentError = &value
	return b
}

// WithHealth sets the Health field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Health field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithHealth(value machineconfigurationv1alpha1.MachineConfigStateHealthEnumeration) *MachineConfigStateStatusApplyConfiguration {
	b.Health = &value
	return b
}

// WithObservedGeneration sets the ObservedGeneration field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ObservedGeneration field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithObservedGeneration(value int64) *MachineConfigStateStatusApplyConfiguration {
	b.ObservedGeneration = &value
	return b
}

// WithConfigVersion sets the ConfigVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ConfigVersion field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithConfigVersion(value *MachineConfigVersionApplyConfiguration) *MachineConfigStateStatusApplyConfiguration {
	b.ConfigVersion = value
	return b
}
