// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/api/machineconfiguration/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ProgressionConditionApplyConfiguration represents an declarative configuration of the ProgressionCondition type for use
// with apply.
type ProgressionConditionApplyConfiguration struct {
	State  *v1alpha1.StateProgress `json:"state,omitempty"`
	Phase  *string                 `json:"phase,omitempty"`
	Reason *string                 `json:"reason,omitempty"`
	Time   *v1.Time                `json:"time,omitempty"`
}

// ProgressionConditionApplyConfiguration constructs an declarative configuration of the ProgressionCondition type for use with
// apply.
func ProgressionCondition() *ProgressionConditionApplyConfiguration {
	return &ProgressionConditionApplyConfiguration{}
}

// WithState sets the State field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the State field is set to the value of the last call.
func (b *ProgressionConditionApplyConfiguration) WithState(value v1alpha1.StateProgress) *ProgressionConditionApplyConfiguration {
	b.State = &value
	return b
}

// WithPhase sets the Phase field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Phase field is set to the value of the last call.
func (b *ProgressionConditionApplyConfiguration) WithPhase(value string) *ProgressionConditionApplyConfiguration {
	b.Phase = &value
	return b
}

// WithReason sets the Reason field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Reason field is set to the value of the last call.
func (b *ProgressionConditionApplyConfiguration) WithReason(value string) *ProgressionConditionApplyConfiguration {
	b.Reason = &value
	return b
}

// WithTime sets the Time field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Time field is set to the value of the last call.
func (b *ProgressionConditionApplyConfiguration) WithTime(value v1.Time) *ProgressionConditionApplyConfiguration {
	b.Time = &value
	return b
}
