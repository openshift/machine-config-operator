// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	machineconfigurationv1 "github.com/openshift/api/machineconfiguration/v1"
)

// MachineConfigStateStatusApplyConfiguration represents an declarative configuration of the MachineConfigStateStatus type for use
// with apply.
type MachineConfigStateStatusApplyConfiguration struct {
	Config             *MachineConfigStateConfigApplyConfiguration                 `json:"configuration,omitempty"`
	MostRecentState    []ProgressionConditionApplyConfiguration                    `json:"mostRecentState,omitempty"`
	ProgressionHistory []ProgressionHistoryApplyConfiguration                      `json:"progressionHistory,omitempty"`
	MostRecentError    *string                                                     `json:"mostRecentError,omitempty"`
	Health             *machineconfigurationv1.MachineConfigStateHealthEnumeration `json:"health,omitempty"`
}

// MachineConfigStateStatusApplyConfiguration constructs an declarative configuration of the MachineConfigStateStatus type for use with
// apply.
func MachineConfigStateStatus() *MachineConfigStateStatusApplyConfiguration {
	return &MachineConfigStateStatusApplyConfiguration{}
}

// WithConfig sets the Config field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Config field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithConfig(value *MachineConfigStateConfigApplyConfiguration) *MachineConfigStateStatusApplyConfiguration {
	b.Config = value
	return b
}

// WithMostRecentState adds the given value to the MostRecentState field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the MostRecentState field.
func (b *MachineConfigStateStatusApplyConfiguration) WithMostRecentState(values ...*ProgressionConditionApplyConfiguration) *MachineConfigStateStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithMostRecentState")
		}
		b.MostRecentState = append(b.MostRecentState, *values[i])
	}
	return b
}

// WithProgressionHistory adds the given value to the ProgressionHistory field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the ProgressionHistory field.
func (b *MachineConfigStateStatusApplyConfiguration) WithProgressionHistory(values ...*ProgressionHistoryApplyConfiguration) *MachineConfigStateStatusApplyConfiguration {
	for i := range values {
		if values[i] == nil {
			panic("nil value passed to WithProgressionHistory")
		}
		b.ProgressionHistory = append(b.ProgressionHistory, *values[i])
	}
	return b
}

// WithMostRecentError sets the MostRecentError field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MostRecentError field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithMostRecentError(value string) *MachineConfigStateStatusApplyConfiguration {
	b.MostRecentError = &value
	return b
}

// WithHealth sets the Health field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Health field is set to the value of the last call.
func (b *MachineConfigStateStatusApplyConfiguration) WithHealth(value machineconfigurationv1.MachineConfigStateHealthEnumeration) *MachineConfigStateStatusApplyConfiguration {
	b.Health = &value
	return b
}
