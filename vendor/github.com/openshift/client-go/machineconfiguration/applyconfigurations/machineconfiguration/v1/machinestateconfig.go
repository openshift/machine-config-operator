// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	types "k8s.io/apimachinery/pkg/types"
	v1 "k8s.io/client-go/applyconfigurations/core/v1"
)

// MachineStateConfigApplyConfiguration represents an declarative configuration of the MachineStateConfig type for use
// with apply.
type MachineStateConfigApplyConfiguration struct {
	v1.ObjectReferenceApplyConfiguration `json:",inline"`
}

// MachineStateConfigApplyConfiguration constructs an declarative configuration of the MachineStateConfig type for use with
// apply.
func MachineStateConfig() *MachineStateConfigApplyConfiguration {
	return &MachineStateConfigApplyConfiguration{}
}

// WithKind sets the Kind field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Kind field is set to the value of the last call.
func (b *MachineStateConfigApplyConfiguration) WithKind(value string) *MachineStateConfigApplyConfiguration {
	b.Kind = &value
	return b
}

// WithNamespace sets the Namespace field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Namespace field is set to the value of the last call.
func (b *MachineStateConfigApplyConfiguration) WithNamespace(value string) *MachineStateConfigApplyConfiguration {
	b.Namespace = &value
	return b
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *MachineStateConfigApplyConfiguration) WithName(value string) *MachineStateConfigApplyConfiguration {
	b.Name = &value
	return b
}

// WithUID sets the UID field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the UID field is set to the value of the last call.
func (b *MachineStateConfigApplyConfiguration) WithUID(value types.UID) *MachineStateConfigApplyConfiguration {
	b.UID = &value
	return b
}

// WithAPIVersion sets the APIVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIVersion field is set to the value of the last call.
func (b *MachineStateConfigApplyConfiguration) WithAPIVersion(value string) *MachineStateConfigApplyConfiguration {
	b.APIVersion = &value
	return b
}

// WithResourceVersion sets the ResourceVersion field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the ResourceVersion field is set to the value of the last call.
func (b *MachineStateConfigApplyConfiguration) WithResourceVersion(value string) *MachineStateConfigApplyConfiguration {
	b.ResourceVersion = &value
	return b
}

// WithFieldPath sets the FieldPath field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FieldPath field is set to the value of the last call.
func (b *MachineStateConfigApplyConfiguration) WithFieldPath(value string) *MachineStateConfigApplyConfiguration {
	b.FieldPath = &value
	return b
}
