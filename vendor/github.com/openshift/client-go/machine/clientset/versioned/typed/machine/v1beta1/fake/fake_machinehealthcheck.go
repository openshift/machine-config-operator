// Code generated by client-gen. DO NOT EDIT.

package fake

import (
	v1beta1 "github.com/openshift/api/machine/v1beta1"
	machinev1beta1 "github.com/openshift/client-go/machine/applyconfigurations/machine/v1beta1"
	typedmachinev1beta1 "github.com/openshift/client-go/machine/clientset/versioned/typed/machine/v1beta1"
	gentype "k8s.io/client-go/gentype"
)

// fakeMachineHealthChecks implements MachineHealthCheckInterface
type fakeMachineHealthChecks struct {
	*gentype.FakeClientWithListAndApply[*v1beta1.MachineHealthCheck, *v1beta1.MachineHealthCheckList, *machinev1beta1.MachineHealthCheckApplyConfiguration]
	Fake *FakeMachineV1beta1
}

func newFakeMachineHealthChecks(fake *FakeMachineV1beta1, namespace string) typedmachinev1beta1.MachineHealthCheckInterface {
	return &fakeMachineHealthChecks{
		gentype.NewFakeClientWithListAndApply[*v1beta1.MachineHealthCheck, *v1beta1.MachineHealthCheckList, *machinev1beta1.MachineHealthCheckApplyConfiguration](
			fake.Fake,
			namespace,
			v1beta1.SchemeGroupVersion.WithResource("machinehealthchecks"),
			v1beta1.SchemeGroupVersion.WithKind("MachineHealthCheck"),
			func() *v1beta1.MachineHealthCheck { return &v1beta1.MachineHealthCheck{} },
			func() *v1beta1.MachineHealthCheckList { return &v1beta1.MachineHealthCheckList{} },
			func(dst, src *v1beta1.MachineHealthCheckList) { dst.ListMeta = src.ListMeta },
			func(list *v1beta1.MachineHealthCheckList) []*v1beta1.MachineHealthCheck {
				return gentype.ToPointerSlice(list.Items)
			},
			func(list *v1beta1.MachineHealthCheckList, items []*v1beta1.MachineHealthCheck) {
				list.Items = gentype.FromPointerSlice(items)
			},
		),
		fake,
	}
}
