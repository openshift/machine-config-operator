// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// MachineConfigurationComponentApplyConfiguration represents an declarative configuration of the MachineConfigurationComponent type for use
// with apply.
type MachineConfigurationComponentApplyConfiguration struct {
	Name       *string        `json:"name,omitempty"`
	Conditions []v1.Condition `json:"conditions,omitempty"`
}

// MachineConfigurationComponentApplyConfiguration constructs an declarative configuration of the MachineConfigurationComponent type for use with
// apply.
func MachineConfigurationComponent() *MachineConfigurationComponentApplyConfiguration {
	return &MachineConfigurationComponentApplyConfiguration{}
}

// WithName sets the Name field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Name field is set to the value of the last call.
func (b *MachineConfigurationComponentApplyConfiguration) WithName(value string) *MachineConfigurationComponentApplyConfiguration {
	b.Name = &value
	return b
}

// WithConditions adds the given value to the Conditions field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Conditions field.
func (b *MachineConfigurationComponentApplyConfiguration) WithConditions(values ...v1.Condition) *MachineConfigurationComponentApplyConfiguration {
	for i := range values {
		b.Conditions = append(b.Conditions, values[i])
	}
	return b
}
