apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.openshift.io: https://github.com/openshift/api/pull/1457
    api.openshift.io/merged-by-featuregates: "true"
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    release.openshift.io/feature-set: DevPreviewNoUpgrade
  name: imagepolicies.config.openshift.io
spec:
  group: config.openshift.io
  names:
    kind: ImagePolicy
    listKind: ImagePolicyList
    plural: imagepolicies
    singular: imagepolicy
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          ImagePolicy holds namespace-wide configuration for image signature verification

          Compatibility level 4: No compatibility is provided, the API can change at any point for any reason. These capabilities should not be used by applications needing long term support.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec holds user settable values for configuration
            properties:
              policy:
                description: |-
                  policy contains configuration to allow scopes to be verified, and defines how
                  images not matching the verification policy will be treated.
                properties:
                  rootOfTrust:
                    description: rootOfTrust specifies the root of trust for the policy.
                    properties:
                      fulcioCAWithRekor:
                        description: |-
                          fulcioCAWithRekor defines the root of trust based on the Fulcio certificate and the Rekor public key.
                          For more information about Fulcio and Rekor, please refer to the document at:
                          https://github.com/sigstore/fulcio and https://github.com/sigstore/rekor
                        properties:
                          fulcioCAData:
                            description: |-
                              fulcioCAData contains inline base64-encoded data for the PEM format fulcio CA.
                              fulcioCAData must be at most 8192 characters.
                            format: byte
                            maxLength: 8192
                            type: string
                          fulcioSubject:
                            description: fulcioSubject specifies OIDC issuer and the
                              email of the Fulcio authentication configuration.
                            properties:
                              oidcIssuer:
                                description: |-
                                  oidcIssuer contains the expected OIDC issuer. It will be verified that the Fulcio-issued certificate contains a (Fulcio-defined) certificate extension pointing at this OIDC issuer URL. When Fulcio issues certificates, it includes a value based on an URL inside the client-provided ID token.
                                  Example: "https://expected.OIDC.issuer/"
                                type: string
                                x-kubernetes-validations:
                                - message: oidcIssuer must be a valid URL
                                  rule: isURL(self)
                              signedEmail:
                                description: |-
                                  signedEmail holds the email address the the Fulcio certificate is issued for.
                                  Example: "expected-signing-user@example.com"
                                type: string
                                x-kubernetes-validations:
                                - message: invalid email address
                                  rule: self.matches('^\\S+@\\S+$')
                            required:
                            - oidcIssuer
                            - signedEmail
                            type: object
                          rekorKeyData:
                            description: |-
                              rekorKeyData contains inline base64-encoded data for the PEM format from the Rekor public key.
                              rekorKeyData must be at most 8192 characters.
                            format: byte
                            maxLength: 8192
                            type: string
                        required:
                        - fulcioCAData
                        - fulcioSubject
                        - rekorKeyData
                        type: object
                      pki:
                        description: pki defines the root of trust based on Bring
                          Your Own Public Key Infrastructure (BYOPKI) Root CA(s) and
                          corresponding intermediate certificates.
                        properties:
                          caIntermediatesData:
                            description: |-
                              caIntermediatesData contains base64-encoded data of a certificate bundle PEM file, which contains one or more intermediate certificates in the PEM format. The total length of the data must not exceed 8192 characters.
                              caIntermediatesData requires caRootsData to be set.
                            format: byte
                            maxLength: 8192
                            type: string
                            x-kubernetes-validations:
                            - message: the caIntermediatesData must start with base64
                                encoding of '-----BEGIN CERTIFICATE-----'.
                              rule: string(self).startsWith('-----BEGIN CERTIFICATE-----')
                            - message: the caIntermediatesData must end with base64
                                encoding of '-----END CERTIFICATE-----'.
                              rule: string(self).endsWith('-----END CERTIFICATE-----\n')
                                || string(self).endsWith('-----END CERTIFICATE-----')
                            - message: caIntermediatesData must be base64 encoding
                                of valid PEM format data contain the same number of
                                '-----BEGIN CERTIFICATE-----' and '-----END CERTIFICATE-----'
                                markers.
                              rule: string(self).findAll('-----BEGIN CERTIFICATE-----').size()
                                == string(self).findAll('-----END CERTIFICATE-----').size()
                          caRootsData:
                            description: caRootsData contains base64-encoded data
                              of a certificate bundle PEM file, which contains one
                              or more CA roots in the PEM format. The total length
                              of the data must not exceed 8192 characters.
                            format: byte
                            maxLength: 8192
                            type: string
                            x-kubernetes-validations:
                            - message: the caRootsData must start with base64 encoding
                                of '-----BEGIN CERTIFICATE-----'.
                              rule: string(self).startsWith('-----BEGIN CERTIFICATE-----')
                            - message: the caRootsData must end with base64 encoding
                                of '-----END CERTIFICATE-----'.
                              rule: string(self).endsWith('-----END CERTIFICATE-----\n')
                                || string(self).endsWith('-----END CERTIFICATE-----')
                            - message: caRootsData must be base64 encoding of valid
                                PEM format data contain the same number of '-----BEGIN
                                CERTIFICATE-----' and '-----END CERTIFICATE-----'
                                markers.
                              rule: string(self).findAll('-----BEGIN CERTIFICATE-----').size()
                                == string(self).findAll('-----END CERTIFICATE-----').size()
                          pkiCertificateSubject:
                            description: pkiCertificateSubject defines the requirements
                              imposed on the subject to which the certificate was
                              issued.
                            properties:
                              email:
                                description: |-
                                  email specifies the expected email address imposed on the subject to which the certificate was issued, and must match the email address listed in the Subject Alternative Name (SAN) field of the certificate.
                                  The email should be a valid email address and at most 320 characters in length.
                                maxLength: 320
                                type: string
                                x-kubernetes-validations:
                                - message: invalid email address in pkiCertificateSubject
                                  rule: self.matches('^\\S+@\\S+$')
                              hostname:
                                description: |-
                                  hostname specifies the expected hostname imposed on the subject to which the certificate was issued, and it must match the hostname listed in the Subject Alternative Name (SAN) DNS field of the certificate.
                                  The hostname should be a valid dns 1123 subdomain name, optionally prefixed by '*.', and at most 253 characters in length.
                                  It should consist only of lowercase alphanumeric characters, hyphens, periods and the optional preceding asterisk.
                                maxLength: 253
                                type: string
                                x-kubernetes-validations:
                                - message: hostname should be a valid dns 1123 subdomain
                                    name, optionally prefixed by '*.'. It should consist
                                    only of lowercase alphanumeric characters, hyphens,
                                    periods and the optional preceding asterisk.
                                  rule: 'self.startsWith(''*.'') ? !format.dns1123Subdomain().validate(self.replace(''*.'',
                                    '''', 1)).hasValue() : !format.dns1123Subdomain().validate(self).hasValue()'
                            type: object
                            x-kubernetes-validations:
                            - message: at least one of email or hostname must be set
                                in pkiCertificateSubject
                              rule: has(self.email) || has(self.hostname)
                        required:
                        - caRootsData
                        - pkiCertificateSubject
                        type: object
                      policyType:
                        description: |-
                          policyType serves as the union's discriminator. Users are required to assign a value to this field, choosing one of the policy types that define the root of trust.
                          "PublicKey" indicates that the policy relies on a sigstore publicKey and may optionally use a Rekor verification.
                          "FulcioCAWithRekor" indicates that the policy is based on the Fulcio certification and incorporates a Rekor verification.
                          "PKI" is a DevPreview feature that indicates that the policy is based on the certificates from Bring Your Own Public Key Infrastructure (BYOPKI). This value is enabled by turning on the SigstoreImageVerificationPKI feature gate.
                        enum:
                        - PublicKey
                        - FulcioCAWithRekor
                        - PKI
                        type: string
                      publicKey:
                        description: publicKey defines the root of trust based on
                          a sigstore public key.
                        properties:
                          keyData:
                            description: |-
                              keyData contains inline base64-encoded data for the PEM format public key.
                              KeyData must be at most 8192 characters.
                            format: byte
                            maxLength: 8192
                            type: string
                          rekorKeyData:
                            description: |-
                              rekorKeyData contains inline base64-encoded data for the PEM format from the Rekor public key.
                              rekorKeyData must be at most 8192 characters.
                            format: byte
                            maxLength: 8192
                            type: string
                        required:
                        - keyData
                        type: object
                    required:
                    - policyType
                    type: object
                    x-kubernetes-validations:
                    - message: pki is required when policyType is PKI, and forbidden
                        otherwise
                      rule: 'has(self.policyType) && self.policyType == ''PKI'' ?
                        has(self.pki) : !has(self.pki)'
                    - message: publicKey is required when policyType is PublicKey,
                        and forbidden otherwise
                      rule: 'has(self.policyType) && self.policyType == ''PublicKey''
                        ? has(self.publicKey) : !has(self.publicKey)'
                    - message: fulcioCAWithRekor is required when policyType is FulcioCAWithRekor,
                        and forbidden otherwise
                      rule: 'has(self.policyType) && self.policyType == ''FulcioCAWithRekor''
                        ? has(self.fulcioCAWithRekor) : !has(self.fulcioCAWithRekor)'
                  signedIdentity:
                    description: signedIdentity specifies what image identity the
                      signature claims about the image. The required matchPolicy field
                      specifies the approach used in the verification process to verify
                      the identity in the signature and the actual image identity,
                      the default matchPolicy is "MatchRepoDigestOrExact".
                    properties:
                      exactRepository:
                        description: exactRepository is required if matchPolicy is
                          set to "ExactRepository".
                        properties:
                          repository:
                            description: |-
                              repository is the reference of the image identity to be matched.
                              The value should be a repository name (by omitting the tag or digest) in a registry implementing the "Docker Registry HTTP API V2". For example, docker.io/library/busybox
                            maxLength: 512
                            type: string
                            x-kubernetes-validations:
                            - message: invalid repository or prefix in the signedIdentity,
                                should not include the tag or digest
                              rule: 'self.matches(''.*:([\\w][\\w.-]{0,127})$'')?
                                self.matches(''^(localhost:[0-9]+)$''): true'
                            - message: invalid repository or prefix in the signedIdentity
                              rule: self.matches('^(((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?$')
                        required:
                        - repository
                        type: object
                      matchPolicy:
                        description: |-
                          matchPolicy sets the type of matching to be used.
                          Valid values are "MatchRepoDigestOrExact", "MatchRepository", "ExactRepository", "RemapIdentity". When omitted, the default value is "MatchRepoDigestOrExact".
                          If set matchPolicy to ExactRepository, then the exactRepository must be specified.
                          If set matchPolicy to RemapIdentity, then the remapIdentity must be specified.
                          "MatchRepoDigestOrExact" means that the identity in the signature must be in the same repository as the image identity if the image identity is referenced by a digest. Otherwise, the identity in the signature must be the same as the image identity.
                          "MatchRepository" means that the identity in the signature must be in the same repository as the image identity.
                          "ExactRepository" means that the identity in the signature must be in the same repository as a specific identity specified by "repository".
                          "RemapIdentity" means that the signature must be in the same as the remapped image identity. Remapped image identity is obtained by replacing the "prefix" with the specified “signedPrefix” if the the image identity matches the specified remapPrefix.
                        enum:
                        - MatchRepoDigestOrExact
                        - MatchRepository
                        - ExactRepository
                        - RemapIdentity
                        type: string
                      remapIdentity:
                        description: remapIdentity is required if matchPolicy is set
                          to "RemapIdentity".
                        properties:
                          prefix:
                            description: |-
                              prefix is the prefix of the image identity to be matched.
                              If the image identity matches the specified prefix, that prefix is replaced by the specified “signedPrefix” (otherwise it is used as unchanged and no remapping takes place).
                              This useful when verifying signatures for a mirror of some other repository namespace that preserves the vendor’s repository structure.
                              The prefix and signedPrefix values can be either host[:port] values (matching exactly the same host[:port], string), repository namespaces,
                              or repositories (i.e. they must not contain tags/digests), and match as prefixes of the fully expanded form.
                              For example, docker.io/library/busybox (not busybox) to specify that single repository, or docker.io/library (not an empty string) to specify the parent namespace of docker.io/library/busybox.
                            maxLength: 512
                            type: string
                            x-kubernetes-validations:
                            - message: invalid repository or prefix in the signedIdentity,
                                should not include the tag or digest
                              rule: 'self.matches(''.*:([\\w][\\w.-]{0,127})$'')?
                                self.matches(''^(localhost:[0-9]+)$''): true'
                            - message: invalid repository or prefix in the signedIdentity
                              rule: self.matches('^(((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?$')
                          signedPrefix:
                            description: |-
                              signedPrefix is the prefix of the image identity to be matched in the signature. The format is the same as "prefix". The values can be either host[:port] values (matching exactly the same host[:port], string), repository namespaces,
                              or repositories (i.e. they must not contain tags/digests), and match as prefixes of the fully expanded form.
                              For example, docker.io/library/busybox (not busybox) to specify that single repository, or docker.io/library (not an empty string) to specify the parent namespace of docker.io/library/busybox.
                            maxLength: 512
                            type: string
                            x-kubernetes-validations:
                            - message: invalid repository or prefix in the signedIdentity,
                                should not include the tag or digest
                              rule: 'self.matches(''.*:([\\w][\\w.-]{0,127})$'')?
                                self.matches(''^(localhost:[0-9]+)$''): true'
                            - message: invalid repository or prefix in the signedIdentity
                              rule: self.matches('^(((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?$')
                        required:
                        - prefix
                        - signedPrefix
                        type: object
                    required:
                    - matchPolicy
                    type: object
                    x-kubernetes-validations:
                    - message: exactRepository is required when matchPolicy is ExactRepository,
                        and forbidden otherwise
                      rule: '(has(self.matchPolicy) && self.matchPolicy == ''ExactRepository'')
                        ? has(self.exactRepository) : !has(self.exactRepository)'
                    - message: remapIdentity is required when matchPolicy is RemapIdentity,
                        and forbidden otherwise
                      rule: '(has(self.matchPolicy) && self.matchPolicy == ''RemapIdentity'')
                        ? has(self.remapIdentity) : !has(self.remapIdentity)'
                required:
                - rootOfTrust
                type: object
              scopes:
                description: |-
                  scopes defines the list of image identities assigned to a policy. Each item refers to a scope in a registry implementing the "Docker Registry HTTP API V2".
                  Scopes matching individual images are named Docker references in the fully expanded form, either using a tag or digest. For example, docker.io/library/busybox:latest (not busybox:latest).
                  More general scopes are prefixes of individual-image scopes, and specify a repository (by omitting the tag or digest), a repository
                  namespace, or a registry host (by only specifying the host name and possibly a port number) or a wildcard expression starting with `*.`, for matching all subdomains (not including a port number).
                  Wildcards are only supported for subdomain matching, and may not be used in the middle of the host, i.e.  *.example.com is a valid case, but example*.*.com is not.
                  If multiple scopes match a given image, only the policy requirements for the most specific scope apply. The policy requirements for more general scopes are ignored.
                  In addition to setting a policy appropriate for your own deployed applications, make sure that a policy on the OpenShift image repositories
                  quay.io/openshift-release-dev/ocp-release, quay.io/openshift-release-dev/ocp-v4.0-art-dev (or on a more general scope) allows deployment of the OpenShift images required for cluster operation.
                  If a scope is configured in both the ClusterImagePolicy and the ImagePolicy, or if the scope in ImagePolicy is nested under one of the scopes from the ClusterImagePolicy, only the policy from the ClusterImagePolicy will be applied.
                  For additional details about the format, please refer to the document explaining the docker transport field,
                  which can be found at: https://github.com/containers/image/blob/main/docs/containers-policy.json.5.md#docker
                items:
                  maxLength: 512
                  type: string
                  x-kubernetes-validations:
                  - message: invalid image scope format, scope must contain a fully
                      qualified domain name or 'localhost'
                    rule: 'size(self.split(''/'')[0].split(''.'')) == 1 ? self.split(''/'')[0].split(''.'')[0].split('':'')[0]
                      == ''localhost'' : true'
                  - message: invalid image scope with wildcard, a wildcard can only
                      be at the start of the domain and is only supported for subdomain
                      matching, not path matching
                    rule: 'self.contains(''*'') ? self.matches(''^\\*(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+$'')
                      : true'
                  - message: invalid repository namespace or image specification in
                      the image scope
                    rule: '!self.contains(''*'') ? self.matches(''^((((?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9])(?:\\.(?:[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]))+(?::[0-9]+)?)|(localhost(?::[0-9]+)?))(?:(?:/[a-z0-9]+(?:(?:(?:[._]|__|[-]*)[a-z0-9]+)+)?)+)?)(?::([\\w][\\w.-]{0,127}))?(?:@([A-Za-z][A-Za-z0-9]*(?:[-_+.][A-Za-z][A-Za-z0-9]*)*[:][[:xdigit:]]{32,}))?$'')
                      : true'
                maxItems: 256
                type: array
                x-kubernetes-list-type: set
            required:
            - policy
            - scopes
            type: object
          status:
            description: status contains the observed state of the resource.
            properties:
              conditions:
                description: conditions provide details on the status of this API
                  Resource.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
