apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.openshift.io: https://github.com/openshift/api/pull/1773
    api.openshift.io/merged-by-featuregates: "true"
    include.release.openshift.io/ibm-cloud-managed: "true"
    include.release.openshift.io/self-managed-high-availability: "true"
    release.openshift.io/feature-set: DevPreviewNoUpgrade
  labels:
    openshift.io/operator-managed: ""
  name: machineosconfigs.machineconfiguration.openshift.io
spec:
  group: machineconfiguration.openshift.io
  names:
    kind: MachineOSConfig
    listKind: MachineOSConfigList
    plural: machineosconfigs
    singular: machineosconfig
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: 'MachineOSConfig describes the configuration for a build process
          managed by the MCO Compatibility level 4: No compatibility is provided,
          the API can change at any point for any reason. These capabilities should
          not be used by applications needing long term support.'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: spec describes the configuration of the machineosconfig
            properties:
              buildInputs:
                description: buildInputs is where user input options for the build
                  live
                properties:
                  baseImagePullSecret:
                    description: baseImagePullSecret is the secret used to pull the
                      base image. must live in the openshift-machine-config-operator
                      namespace
                    properties:
                      name:
                        description: name is the name of the secret used to push or
                          pull this MachineOSConfig object. this secret must be in
                          the openshift-machine-config-operator namespace.
                        type: string
                    required:
                    - name
                    type: object
                  baseOSExtensionsImagePullspec:
                    description: 'baseOSExtensionsImagePullspec is the base Extensions
                      image used in the build process the MachineOSConfig object will
                      use the in cluster image registry configuration. if you wish
                      to use a mirror or any other settings specific to registries.conf,
                      please specify those in the cluster wide registries.conf. The
                      format of the image pullspec is: host[:port][/namespace]/name@sha256:<digest>'
                    maxLength: 447
                    minLength: 1
                    type: string
                    x-kubernetes-validations:
                    - message: the OCI Image reference must end with a valid '@sha256:<digest>'
                        suffix, where '<digest>' is 64 characters long
                      rule: (self.split('@').size() == 2 && self.split('@')[1].matches('^sha256:[a-f0-9]{64}$'))
                    - message: the OCI Image name should follow the host[:port][/namespace]/name
                        format, resembling a valid URL without the scheme
                      rule: (self.split('@')[0].matches('^([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9-]+(:[0-9]{2,5})?/([a-zA-Z0-9-_]{0,61}/)?[a-zA-Z0-9-_.]*?$'))
                  baseOSImagePullspec:
                    description: 'baseOSImagePullspec is the base OSImage we use to
                      build our custom image. the MachineOSConfig object will use
                      the in cluster image registry configuration. if you wish to
                      use a mirror or any other settings specific to registries.conf,
                      please specify those in the cluster wide registries.conf. The
                      format of the image pullspec is: host[:port][/namespace]/name@sha256:<digest>'
                    maxLength: 447
                    minLength: 1
                    type: string
                    x-kubernetes-validations:
                    - message: the OCI Image reference must end with a valid '@sha256:<digest>'
                        suffix, where '<digest>' is 64 characters long
                      rule: (self.split('@').size() == 2 && self.split('@')[1].matches('^sha256:[a-f0-9]{64}$'))
                    - message: the OCI Image name should follow the host[:port][/namespace]/name
                        format, resembling a valid URL without the scheme
                      rule: (self.split('@')[0].matches('^([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9-]+(:[0-9]{2,5})?/([a-zA-Z0-9-_]{0,61}/)?[a-zA-Z0-9-_.]*?$'))
                  containerFile:
                    description: containerFile describes the custom data the user
                      has specified to build into the image. this is also commonly
                      called a Dockerfile and you can treat it as such. The content
                      is the content of your Dockerfile.
                    items:
                      description: MachineOSContainerfile contains all custom content
                        the user wants built into the image
                      properties:
                        containerfileArch:
                          default: noarch
                          description: 'containerfileArch describes the architecture
                            this containerfile is to be built for this arch is optional.
                            If the user does not specify an architecture, it is assumed
                            that the content can be applied to all architectures,
                            or in a single arch cluster: the only architecture.'
                          enum:
                          - arm64
                          - amd64
                          - ppc64le
                          - s390x
                          - aarch64
                          - x86_64
                          - noarch
                          type: string
                        content:
                          description: content is the custom content to be built
                          type: string
                      required:
                      - content
                      type: object
                    maxItems: 7
                    minItems: 0
                    type: array
                    x-kubernetes-list-map-keys:
                    - containerfileArch
                    x-kubernetes-list-type: map
                  imageBuilder:
                    description: machineOSImageBuilder describes which image builder
                      will be used in each build triggered by this MachineOSConfig
                    properties:
                      imageBuilderType:
                        default: PodImageBuilder
                        description: 'imageBuilderType specifies the backend to be
                          used to build the image. Valid options are: PodImageBuilder'
                        enum:
                        - PodImageBuilder
                        type: string
                    required:
                    - imageBuilderType
                    type: object
                  releaseVersion:
                    description: 'releaseVersion is associated with the base OS Image.
                      This is the version of Openshift that the Base Image is associated
                      with. This field is populated from the machine-config-osimageurl
                      configmap in the openshift-machine-config-operator namespace.
                      It will come in the format: 4.16.0-0.nightly-2024-04-03-065948
                      or any valid release. The MachineOSBuilder populates this field
                      and validates that this is a valid stream. This is used as a
                      label in the dockerfile that builds the OS image.'
                    type: string
                  renderedImagePushSecret:
                    description: renderedImagePushSecret is the secret used to connect
                      to a user registry. the final image push and pull secrets should
                      be separate for security concerns. If the final image push secret
                      is somehow exfiltrated, that gives someone the power to push
                      images to the image repository. By comparison, if the final
                      image pull secret gets exfiltrated, that only gives someone
                      to pull images from the image repository. It's basically the
                      principle of least permissions. this push secret will be used
                      only by the MachineConfigController pod to push the image to
                      the final destination. Not all nodes will need to push this
                      image, most of them will only need to pull the image in order
                      to use it.
                    properties:
                      name:
                        description: name is the name of the secret used to push or
                          pull this MachineOSConfig object. this secret must be in
                          the openshift-machine-config-operator namespace.
                        type: string
                    required:
                    - name
                    type: object
                  renderedImagePushspec:
                    description: 'renderedImagePushspec describes the location of
                      the final image. the MachineOSConfig object will use the in
                      cluster image registry configuration. if you wish to use a mirror
                      or any other settings specific to registries.conf, please specify
                      those in the cluster wide registries.conf. The format of the
                      image pushspec is: host[:port][/namespace]/name:<tag> or svc_name.namespace.svc[:port]/repository/name:<tag>'
                    maxLength: 447
                    minLength: 1
                    type: string
                    x-kubernetes-validations:
                    - message: the OCI Image reference must end with a valid :<tag>,
                        where '<digest>' is 64 characters long and '<tag>' is any
                        valid string  Or it must be a valid .svc followed by a port,
                        repository, image name, and tag.
                      rule: ((self.split(':').size() == 2 && self.split(':')[1].matches('^([a-zA-Z0-9-./:])+$'))
                        || self.matches('^[^.]+\\.[^.]+\\.svc:\\d+\\/[^\\/]+\\/[^\\/]+:[^\\/]+$'))
                    - message: the OCI Image name should follow the host[:port][/namespace]/name
                        format, resembling a valid URL without the scheme. Or it must
                        be a valid .svc followed by a port, repository, image name,
                        and tag.
                      rule: ((self.split(':').size() == 2 && self.split(':')[0].matches('^([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9-]+(:[0-9]{2,5})?/([a-zA-Z0-9-_]{0,61}/)?[a-zA-Z0-9-_.]*?$'))
                        || self.matches('^[^.]+\\.[^.]+\\.svc:\\d+\\/[^\\/]+\\/[^\\/]+:[^\\/]+$'))
                required:
                - baseImagePullSecret
                - imageBuilder
                - renderedImagePushSecret
                - renderedImagePushspec
                type: object
              buildOutputs:
                description: buildOutputs is where user input options for the build
                  live
                properties:
                  currentImagePullSecret:
                    description: currentImagePullSecret is the secret used to pull
                      the final produced image. must live in the openshift-machine-config-operator
                      namespace the final image push and pull secrets should be separate
                      for security concerns. If the final image push secret is somehow
                      exfiltrated, that gives someone the power to push images to
                      the image repository. By comparison, if the final image pull
                      secret gets exfiltrated, that only gives someone to pull images
                      from the image repository. It's basically the principle of least
                      permissions. this pull secret will be used on all nodes in the
                      pool. These nodes will need to pull the final OS image and boot
                      into it using rpm-ostree or bootc.
                    properties:
                      name:
                        description: name is the name of the secret used to push or
                          pull this MachineOSConfig object. this secret must be in
                          the openshift-machine-config-operator namespace.
                        type: string
                    required:
                    - name
                    type: object
                type: object
              machineConfigPool:
                description: machineConfigPool is the pool which the build is for
                properties:
                  name:
                    description: name of the MachineConfigPool object.
                    maxLength: 253
                    pattern: ^([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9])(\.([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\-]{0,61}[a-zA-Z0-9]))*$
                    type: string
                required:
                - name
                type: object
            required:
            - buildInputs
            - machineConfigPool
            type: object
          status:
            description: status describes the status of the machineosconfig
            properties:
              conditions:
                description: conditions are state related conditions for the config.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              currentImagePullspec:
                description: currentImagePullspec is the fully qualified image pull
                  spec used by the MCO to pull down the new OSImage. This must include
                  sha256.
                maxLength: 447
                minLength: 1
                type: string
                x-kubernetes-validations:
                - message: the OCI Image reference must end with a valid '@sha256:<digest>'
                    suffix, where '<digest>' is 64 characters long
                  rule: (self.split('@').size() == 2 && self.split('@')[1].matches('^sha256:[a-f0-9]{64}$'))
                - message: the OCI Image name should follow the host[:port][/namespace]/name
                    format, resembling a valid URL without the scheme
                  rule: (self.split('@')[0].matches('^([a-zA-Z0-9-]+\\.)+[a-zA-Z0-9-]+(:[0-9]{2,5})?/([a-zA-Z0-9-_]{0,61}/)?[a-zA-Z0-9-_.]*?$'))
              observedGeneration:
                description: observedGeneration represents the generation observed
                  by the controller. this field is updated when the user changes the
                  configuration in BuildSettings or the MCP this object is associated
                  with.
                format: int64
                type: integer
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
