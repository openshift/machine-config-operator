apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-state-controller
  namespace: {{.TargetNamespace}}
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: machine-state-controller 
  template:
    metadata:
      labels:
        k8s-app: machine-state-controller
      annotations:
        target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
    spec: 
      containers:
      - name: machine-state-controller
        image: {{.Images.MachineConfigOperator}}
        command: ["/usr/bin/machine-state-controller"]
        args:
        - "start"
      - name: kube-rbac-proxy
        image: {{.Images.KubeRbacProxy}}
        ports:
        - containerPort: 9001
          name: metrics
          protocol: TCP 
        args:
        - --secure-listen-address=0.0.0.0:9001
        - --config-file=/etc/kube-rbac-proxy/config-file.yaml
        - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - --upstream=http://127.0.0.1:8797
        - --logtostderr=true
        - --tls-cert-file=/etc/tls/private/tls.crt
        - --tls-private-key-file=/etc/tls/private/tls.key
        resources:
            requests:
              cpu: 20m
              memory: 50Mi
        volumeMounts:
        - mountPath: /etc/tls/private
          name: proxy-tls
        - mountPath: /etc/kube-rbac-proxy
          name: msc-auth-proxy-config
      serviceAccountName: machine-state-controller
      priorityClassName: "system-cluster-critical"
      volumes:
      - name: proxy-tls
        secret:
          secretName: msc-proxy-tls
      - configMap:
            name: kube-rbac-proxy
        name: msc-auth-proxy-config
      tolerations:
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: "NoSchedule"