---
kind: Pod
apiVersion: v1
metadata:
  name: keepalived
  namespace: openshift-{{ onPremPlatformShortName .ControllerConfig }}-infra
  creationTimestamp:
  deletionGracePeriodSeconds: 65
  labels:
    app: {{ onPremPlatformShortName .ControllerConfig }}-infra-vrrp
spec:
  volumes:
  - name: resource-dir
    hostPath:
      path: "/etc/kubernetes/static-pod-resources/keepalived"
  - name: kubeconfig
    hostPath:
      path: "/etc/kubernetes/kubeconfig"
  - name: conf-dir
    hostPath:
      path: "/etc/keepalived"
  - name: manifests
    hostPath:
      path: "/opt/openshift/manifests"
  - name: run-dir
    empty-dir: {}
  containers:
  - name: keepalived
    securityContext:
      privileged: true
    image: {{.Images.KeepalivedBootstrap}}
    env:
      - name: NSS_SDB_USE_CACHE
        value: "no"
    command:
    - /bin/bash
    - -c
    - |
      #/bin/bash
      reload_keepalived()
      {
        if pid=$(pgrep -o keepalived); then
            kill -s SIGHUP "$pid"
        else
            start_keepalived
        fi
      }

      stop_keepalived()
      {
        if pid=$(pgrep -o keepalived); then
          kill -s SIGTERM "$pid"
          # The monitor runs every 10 seconds
          sleep 9
          if pid=$(pgrep -o keepalived); then
            kill -s SIGKILL "$pid"
          fi
          touch /var/run/keepalived/stopped
        fi
      }

      start_keepalived()
      {
        if ! pgrep -o keepalived > /dev/null; then
          /usr/sbin/keepalived -f /etc/keepalived/keepalived.conf --dont-fork --vrrp --log-detail --log-console &
        fi
        rm -f /var/run/keepalived/stopped
      }

      msg_handler()
      {
        while read -r line; do
          # These get sent a lot, don't spam the logs with them
          if [ "$line" = stop ]; then
              stop_keepalived
              continue
          elif [ "$line" = start ]; then
              start_keepalived
              continue
          fi
          echo "The client sent: $line" >&2
          if [ "$line" = reload ]; then
              reload_keepalived
          else
              echo "Unrecognized command: $line" >&2
          fi
        done
      }

      set -ex
      declare -r keepalived_sock="/var/run/keepalived/keepalived.sock"
      export -f msg_handler
      export -f reload_keepalived
      export -f stop_keepalived
      export -f start_keepalived
      if [ -s "/etc/keepalived/keepalived.conf" -a ! -e /var/run/keepalived/stopped ]; then
        start_keepalived
      fi

      rm -f "$keepalived_sock"
      socat UNIX-LISTEN:${keepalived_sock},fork system:'bash -c msg_handler'
    resources:
      requests:
        cpu: 100m
        memory: 200Mi
    volumeMounts:
    - name: conf-dir
      mountPath: "/etc/keepalived"
    - name: run-dir
      mountPath: "/var/run/keepalived"
    livenessProbe:
      exec:
        command:
        - /bin/bash
        - -c
        - |
          [[ -s /etc/keepalived/keepalived.conf ]] || \
          [[ -e /var/run/keepalived/stopped ]] || \
          kill -s SIGUSR1 "$(pgrep -o keepalived)" && ! grep -q "State = FAULT" /tmp/keepalived.data
      initialDelaySeconds: 20
    terminationMessagePolicy: FallbackToLogsOnError
    imagePullPolicy: IfNotPresent
  - name: keepalived-monitor
    image: {{ .Images.BaremetalRuntimeCfgBootstrap }}
    env:
      - name: ENABLE_UNICAST
        value: "{{ onPremPlatformKeepalivedEnableUnicast .ControllerConfig }}"
      - name: IS_BOOTSTRAP
        value: "yes"
    command:
    - dynkeepalived
    - "/etc/kubernetes/kubeconfig"
    - "/config/keepalived.conf.tmpl"
    - "/etc/keepalived/keepalived.conf"
    - "--api-vip"
    - "{{ onPremPlatformAPIServerInternalIP .ControllerConfig }}"
    - "--ingress-vip"
    - "{{ onPremPlatformIngressIP .ControllerConfig }}"
    - "--cluster-config"
    - "/opt/openshift/manifests/cluster-config.yaml"
    - "--check-interval"
    - "5s"
    resources:
      requests:
        cpu: 100m
        memory: 200Mi
    volumeMounts:
    - name: resource-dir
      mountPath: "/config"
    - name: kubeconfig
      mountPath: "/etc/kubernetes/kubeconfig"
    - name: conf-dir
      mountPath: "/etc/keepalived"
    - name: run-dir
      mountPath: "/var/run/keepalived"
    - name: manifests
      mountPath: "/opt/openshift/manifests"
    imagePullPolicy: IfNotPresent
  hostNetwork: true
  tolerations:
  - operator: Exists
  priorityClassName: system-node-critical
status: {}
